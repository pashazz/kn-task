/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'idea'
    id 'io.freefair.lombok' version "6.4.1"
    id 'java'

}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //implementation 'org.springframework.boot:spring-boot-starter-security:2.6.5'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation 'org.liquibase:liquibase-core:4.9.0'
    implementation 'com.zaxxer:HikariCP:5.0.1'
    runtimeOnly 'org.postgresql:postgresql:42.3.3'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'


    //cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.1.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test:5.6.2'
    testImplementation 'org.mockito:mockito-core:4.4.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.4.0'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2.2'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation project (':constants')
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'cities'
java.sourceCompatibility = JavaVersion.VERSION_11

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
